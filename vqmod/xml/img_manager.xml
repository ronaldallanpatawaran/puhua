<modification>
	<name>Power Image Manager 2.0</name>
	<version>2.00</version>
	<link>http://bit.ly/1vHShWu</link>
	<author>Sharley's Web Development</author>
	<code>1vHShWu</code>
	
	<file path="admin/controller/common/header.php">        
	  <operation>
	      <search position="before"><![CDATA[return $this->load->view('common/header.tpl']]></search>
	      <add><![CDATA[ 
	        $data['lang'] = $this->config->get('pim_language');
	       // var_dump($data);
	      ]]></add>
	  </operation> 
	</file>
  <file path="admin/view/template/common/header.tpl">        
    <operation>
        <search position="before"><![CDATA[<script type="text/javascript" src="view/javascript/bootstrap/js/bootstrap.min.js"></script>]]></search>
        <add><![CDATA[
          <!-- Power Image Manager -->
          <link rel="stylesheet" href="view/javascript/jquery/jquery-ui-1.11.4.custom/jquery-ui.css" />
          <script src="view/javascript/jquery/jquery-ui-1.11.4.custom/jquery-ui.min.js"></script>
          <script type="text/javascript" src="view/javascript/pim/pim.min.js"></script>          
          <link rel="stylesheet" type="text/css" media="screen" href="view/stylesheet/pim/pim.min.css">
          <link rel="stylesheet" type="text/css" media="screen" href="view/stylesheet/pim/theme.css">
            <?php if ($lang) { ?>
             <script type="text/javascript" src="view/javascript/pim/i18n/<?php echo $lang;?>.js"></script>  
            <?php } ?>        	
          <!-- Power Image Manager -->        
        ]]></add>
    </operation> 
  </file>
  <file path="admin/controller/common/filemanager.php">        
    <operation>
        <search position="before"><![CDATA[public function delete() {]]></search>
        <add><![CDATA[
	// Power Image Manager
    public function connector() {
      include_once DIR_SYSTEM.'library/filemanager/elFinderConnector.class.php';
      include_once DIR_SYSTEM.'library/filemanager/elFinder.class.php';
      include_once DIR_SYSTEM.'library/filemanager/elFinderVolumeDriver.class.php';
      include_once DIR_SYSTEM.'library/filemanager/elFinderVolumeLocalFileSystem.class.php';

      if (isset($this->request->server['HTTPS']) && (($this->request->server['HTTPS'] == 'on') || ($this->request->server['HTTPS'] == '1'))) {
  			$base = HTTPS_CATALOG."image/";
  		} else {
  			$base = HTTP_CATALOG."image/";
  		}    
    
       $this->config->set('config_error_display', 0);       
       $this->config->set('config_error_log', 0);
        function access($attr, $path, $data, $volume) {
        	return strpos(basename($path), '.') === 0       // if file/folder begins with '.' (dot)
        		? !($attr == 'read' || $attr == 'write')    // set read+write to false, other (locked+hidden) set to true
        		:  null;                                    // else elFinder decide it itself
        }
        $tmbURL = DIR_IMAGE.'tmb/';

        $opts = array(
        	'roots' => array(
        		array(
        			'driver'        => 'LocalFileSystem',   // driver for accessing file system (REQUIRED)
        			'path'          => DIR_IMAGE.'catalog/',         // path to files (REQUIRED)
        			'URL'           => $base.'catalog/', // URL to files (REQUIRED)
        			'tmbURL'        => $tmbPath,
              'uploadAllow'   => array('image', 'application'),
              'uploadDeny'    => array('all'),
              'uploadOrder'   => 'deny,allow',        			
        			'accessControl' => 'access',             // disable and hide dot starting files (OPTIONAL)
              'fileMode'      => 0777,         // new files mode
              'dirMode'       => 0777,         // new folders mode        			
        			'tmbBgColor'    => 'transparent',
        			'tmbCrop'       => 'false', 
        			'tmbSize'       => '59',
        			'copyOverwrite' => $this->config->get('pim_copyOverwrite'),
        			'uploadOverwrite' => $this->config->get('pim_uploadOverwrite'),
        			'uploadMaxSize'  => ''.$this->config->get('pim_uploadMaxSize').''.$this->config->get('pim_uploadMaxType'),      			
        		)
        	),                     
        );
         
        $connector = new elFinderConnector(new elFinder($opts));
        $connector->run();
    }  	
	// Power Image Manager        
        ]]></add>
    </operation> 
  </file>
<file path="admin/controller/catalog/product.php">        

    <operation>
        <search position="after"><![CDATA[private $error = array();]]></search>
        <add><![CDATA[	
  // multi image uploader
	public function pimage() {
		$this->load->model('tool/image');

		if (isset($this->request->get['image'])) {
			$this->response->setOutput($this->model_tool_image->resize(html_entity_decode($this->request->get['image'], ENT_QUOTES, 'UTF-8'), 100, 100));
		}
	}
	// multi image uploader	
	
	]]></add>
    </operation> 
    <operation>
        <search position="after"><![CDATA[function getForm() {]]></search>
        <add><![CDATA[
          $data['pim_miu'] = false;
          $data['pim_status'] = false;
          $data['pim_miu']  = $this->config->get('pim_miu');
          $data['pim_status'] = $this->config->get('pim_status');
        ]]></add>
    </operation> 
  </file> 
  <file path="admin/controller/common/footer.php">        
    <operation>
        <search position="before"><![CDATA[return $this->load->view('common/footer.tpl']]></search>
        <add><![CDATA[ 
          		$data['width'] = 1000;
          		$data['height'] = 600;
              $data['lang'] = 'en';
              if ($this->config->get('pim_status')) {
              		$data['width'] = $this->config->get('pim_width');
              		$data['height'] = $this->config->get('pim_height');             		
              		
            		if ($this->config->get('pim_language')) {
              		$data['lang'] = $this->config->get('pim_language');
            		}
              }
        
        ]]></add>
    </operation> 
  </file>
  <file path="admin/view/template/common/footer.tpl">        
    <operation>
        <search position="before"><![CDATA[<footer id="footer">]]></search>
        <add><![CDATA[
<script type="text/javascript"><!--
// Power Image Manager
$(document).ready(function() {
  $(document).undelegate('a[data-toggle=\'image\']', 'click');
	// Power Image Manager
	$(document).delegate('a[data-toggle=\'image\']', 'click', function(e) {
		e.preventDefault();

		var element = this;
	
		$(element).popover({
			html: true,
			placement: 'right',
			trigger: 'manual',
			content: function() {
				return '<button type="button" id="button-image" class="btn btn-primary"><i class="fa fa-pencil"></i></button> <button type="button" id="button-clear" class="btn btn-danger"><i class="fa fa-trash-o"></i></button>';
			}
		});
	
		$(element).popover('toggle');		
	
		$('#button-image').on('click', function() {
      $(element).popover('hide');
      var target = $(element).parent().find('input').attr('id');
      var thumb = $(element).attr('id');
      var name_field = $(element).parents('tr').children('td:first').find('input[type ="text"]');
				var fm = $('<div/>').dialogelfinder({
				url : 'index.php?route=common/filemanager/connector&token=' + getURLVar('token'),
				lang : '<?php echo $lang;?>',
				width : <?php echo $width;?>,
				height: <?php echo $height;?>,
				destroyOnClose : true,
      uiOptions : {toolbar : [['home', 'back', 'forward'],['reload'],['mkdir', 'upload'],['open', 'download', 'getfile'],['info'],['quicklook'],['copy', 'cut', 'paste'],['rm'],['duplicate', 'rename', 'edit', 'resize'],['extract', 'archive','multiupload', 'sort'],['search'],['view'],['help']]},		
     
      contextmenu: {navbar: ["open", "|", "copy", "cut", "paste", "duplicate", "|", "rm", "|", "info"],cwd: ["reload", "back", "|", "upload", "mkdir", "mkfile", "paste", "|", "sort", "|", "info"],files: ["getfile", "|", "open", "quicklook", "|", "download", "|", "copy", "cut", "paste", "duplicate", "|", "rm", "|", "edit", "rename", "resize", "|", "archive","multiupload", "extract", "|", "info"]},				
				getFileCallback : function(files, fm) {
          console.log(files);
          $('#'+thumb).find('img').attr('src', files.tmb);
        	// $('#'+target).val(files.path);
          $('#'+target).val(files.path.replace(/\\/g, "/"));
          var filename = files.name.substring(0,63);
          name_field.val(filename);
        	$('#radio-'+target).removeAttr('disabled');  
        	$('#radio-'+target).val(files.path);
				},
				commandsOptions : {
					getfile : {
						oncomplete : 'close',
						folders : false
					}
				}
			}).dialogelfinder('instance');      
      return;
		}); 
	
		$('#button-clear').on('click', function() {
			$(element).find('img').attr('src', $(element).find('img').attr('data-placeholder'));
			
			$(element).parent().find('input').attr('value', '');
	
			$(element).popover('hide');
		});
	});  
	
	$(document).delegate('a[data-toggle=\'manager\']', 'click', function(e) {
		e.preventDefault();
				var fm = $('<div/>').dialogelfinder({
				url : 'index.php?route=common/filemanager/connector&token=' + getURLVar('token'),
				lang : '<?php echo $lang;?>',
				width : <?php echo $width;?>,
				height: <?php echo $height;?>,
				destroyOnClose : true,
        uiOptions : {toolbar : [['home', 'back', 'forward'],['reload'],['mkdir', 'upload'],['open', 'download', 'getfile'],['info'],['quicklook'],['copy', 'cut', 'paste'],['rm'],['duplicate', 'rename', 'edit', 'resize'],['extract', 'archive','multiupload'],['search'],['view'],['help']]},		
              contextmenu: {navbar: ["open", "|", "copy", "cut", "paste", "duplicate", "|", "rm", "|", "info"],cwd: ["reload", "back", "|", "upload", "mkdir", "mkfile", "paste", "|", "sort", "|", "info"],files: ["getfile", "|", "open", "quicklook", "|", "download", "|", "copy", "cut", "paste", "duplicate", "|", "rm", "|", "edit", "rename", "resize", "|", "archive","multiupload", "extract", "|", "info"]},						
				getFileCallback : function(files, fm) {
								console.log(files);
         addMultiImage(files.path);
				},
				commandsOptions : {
					getfile : {
						oncomplete : 'close',
						folders : false
					}
				}
			}).dialogelfinder('instance');      
	});  
	
 $(document).undelegate('button[data-toggle=\'image\']', 'click');

	$(document).delegate('button[data-toggle=\'image\']', 'click', function() {

				var fm = $('<div/>').dialogelfinder({
				url : 'index.php?route=common/filemanager/connector&token=' + getURLVar('token'),
				lang : '<?php echo $lang;?>',
				width : <?php echo $width;?>,
				height: <?php echo $height;?>,
				destroyOnClose : true,
				getFileCallback : function(files, fm) {
          					console.log(files);
          	var range, sel = window.getSelection(); 
          	
          	if (sel.rangeCount) { 
          		var img = document.createElement('img');
          		img.src = files.url;
          	
          		range = sel.getRangeAt(0); 
          		range.insertNode(img); 
          	}
          	

				},
				commandsOptions : {
					getfile : {
						oncomplete : 'close',
						folders : false
					}
				}
			}).dialogelfinder('instance');   		
    }); 
	
  
});        

// Power Image Manager
//--></script>
        
        
        ]]></add>
    </operation> 
  </file>
	<file path="admin/model/catalog/product.php">
        <operation>
            <search position="before" limit="1"><![CDATA[foreach ($data['product_description'] as $language_id => $value) {]]></search>
            <add><![CDATA[
	  if (isset($data['def_img']) && $data['def_img'] != "" && !$this->config->get('pim_miu')) {
       $q="UPDATE " . DB_PREFIX . "product SET image = '" . $this->db->escape($data['def_img']) . "' WHERE product_id = '" . (int)$product_id . "'";
	     $this->db->query($q);  
		}
    ]]></add>
        </operation>    
        <operation>
            <search position="before" offset="1" limit="1"><![CDATA[foreach ($data['product_description'] as $language_id => $value) {]]></search>
            <add><![CDATA[
	  if (isset($data['def_img']) && $data['def_img'] != "" && $this->config->get('pim_miu')) {
       $q="UPDATE " . DB_PREFIX . "product SET image = '" . $this->db->escape($data['def_img']) . "' WHERE product_id = '" . (int)$product_id . "'";
	     $this->db->query($q);  
		}
    ]]></add>
        </operation>  
        <operation>
            <search position="after" limit="1"><![CDATA[foreach ($data['product_image'] as $product_image) {]]></search>
            <add><![CDATA[
    		  if ($this->config->get('pim_deletedef') && isset($data['def_img']) && $data['def_img'] == $product_image['image']) { continue;}            
            ]]></add>
        </operation>  
        <operation>
            <search position="before" limit="1"><![CDATA[$this->db->query("DELETE FROM " . DB_PREFIX . "product_to_download WHERE product_id = '" . (int)$product_id . "'");]]></search>
            <add><![CDATA[
    		  if ($this->config->get('pim_deletedef') && isset($data['def_img'])) {
    		    $this->db->query("DELETE FROM " . DB_PREFIX . "product_image WHERE product_id = '" . (int)$product_id . "' AND image = '" . $this->db->escape($data['image']) . "'");
    		  }        
            ]]></add>
        </operation>          
      
     </file>     
</modification>